// Code generated by melt; DO NOT EDIT.

package templates

import (
	"github.com/0-mqix/melt"
	"io"
	"net/http"
)

var (
	News               *melt.Component
	ComponentsOverview *melt.Component
	Exchanges          *melt.Component
	Index              *melt.Component
	Login              *melt.Component
	ComponentsHeader   *melt.Component
)

type GlobalHandlers struct {
	ComponentsHeader func(r *http.Request, arguments map[string]any) *ComponentsHeaderData
}

func Load(furnace *melt.Furnace, handlers GlobalHandlers) {
	ComponentsHeader = furnace.MustGetComponent("templates/components/header.html")
	News = furnace.MustGetComponent("templates/news.html")
	ComponentsOverview = furnace.MustGetComponent("templates/components/overview.html")
	Exchanges = furnace.MustGetComponent("templates/exchanges.html")
	Index = furnace.MustGetComponent("templates/index.html")
	Login = furnace.MustGetComponent("templates/login.html")

	globalHandlers := make(map[string]melt.GlobalHandler)
	var handler melt.GlobalHandler

	if handlers.ComponentsHeader != nil {
		handler = func(r *http.Request, arguments map[string]any) any { return handlers.ComponentsHeader(r, arguments) }
	} else {
		handler = func(r *http.Request, _ map[string]any) any { return &ComponentsHeaderData{} }
	}

	globalHandlers["templates/components/header.html"] = handler

	furnace.SetGlobalHandlers(globalHandlers)
}

type ExchangesData struct {
	Request   *http.Request
	Exchanges any
}

// generated write function for component
//
//	path: "templates/exchanges.html"
func WriteExchanges(w io.Writer, r *http.Request, data ExchangesData, globalOptions ...melt.GlobalOption) error {
	return Exchanges.Write(w, r, data, globalOptions...)
}

type IndexData struct {
	Balance           any
	Value             any
	Wallet            any
	Request           *http.Request
	Assets            any
	PriceUsd          any
	PriceEuro         any
	ChangePercent24Hr any
}

// generated write function for component
//
//	path: "templates/index.html"
func WriteIndex(w io.Writer, r *http.Request, data IndexData, globalOptions ...melt.GlobalOption) error {
	return Index.Write(w, r, data, globalOptions...)
}

type IndexAssetData struct {
	Id      any
	Symbol  any
	Name    any
	Balance any
}

// generated write function for a template in a component
//
//	path: "templates/index.html"
//	template: "asset"
func WriteIndexAsset(w io.Writer, data IndexAssetData) error {
	return Index.WriteTemplate(w, "asset", data)
}

type LoginData struct {
	Register any
}

// generated write function for component
//
//	path: "templates/login.html"
func WriteLogin(w io.Writer, r *http.Request, data LoginData, globalOptions ...melt.GlobalOption) error {
	return Login.Write(w, r, data, globalOptions...)
}

type ComponentsHeaderData struct {
	Swap     any
	Balance  any
	Username any
}

// generated write function for component
//
//	path: "templates/components/header.html"
func WriteComponentsHeader(w io.Writer, r *http.Request, data ComponentsHeaderData, globalOptions ...melt.GlobalOption) error {
	return ComponentsHeader.Write(w, r, data, globalOptions...)
}

type NewsData struct {
	Request *http.Request
	News    any
}

// generated write function for component
//
//	path: "templates/news.html"
func WriteNews(w io.Writer, r *http.Request, data NewsData, globalOptions ...melt.GlobalOption) error {
	return News.Write(w, r, data, globalOptions...)
}

type ComponentsOverviewData struct {
	ChangePercent24Hr any
	MarketCapUsd      any
	VolumeUsd24Hr     any
	Supply            any
	Symbol            any
	Name              any
	PriceUsd          any
	Balance           any
	Value             any
	ActionAmount      any
	Id                any
	Bought            any
	Sold              any
}

// generated write function for component
//
//	path: "templates/components/overview.html"
func WriteComponentsOverview(w io.Writer, r *http.Request, data ComponentsOverviewData, globalOptions ...melt.GlobalOption) error {
	return ComponentsOverview.Write(w, r, data, globalOptions...)
}

type ComponentsOverviewActionsData struct {
	Id       any
	PriceUsd any
	Symbol   any
	Balance  any
}

// generated write function for a template in a component
//
//	path: "templates/components/overview.html"
//	template: "actions"
func WriteComponentsOverviewActions(w io.Writer, data ComponentsOverviewActionsData) error {
	return ComponentsOverview.WriteTemplate(w, "actions", data)
}
